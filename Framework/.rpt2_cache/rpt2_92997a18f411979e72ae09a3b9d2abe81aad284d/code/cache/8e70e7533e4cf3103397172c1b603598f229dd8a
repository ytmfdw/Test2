{
  "code": "export default class Map {\r\n    constructor() {\r\n        this.container = {};\r\n    }\r\n    put(key, value) {\r\n        try {\r\n            if (key != null && key != \"\")\r\n                this.container[key] = value;\r\n        }\r\n        catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n    get(key) {\r\n        try {\r\n            return this.container[key];\r\n        }\r\n        catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n    containsKey(key) {\r\n        try {\r\n            for (var p in this.container) {\r\n                if (p == key)\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n        catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n    containsValue(value) {\r\n        try {\r\n            for (var p in this.container) {\r\n                if (this.container[p] === value)\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n        catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n    ;\r\n    remove(key) {\r\n        try {\r\n            delete this.container[key];\r\n        }\r\n        catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n    ;\r\n    clear() {\r\n        try {\r\n            delete this.container;\r\n            this.container = {};\r\n        }\r\n        catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n    ;\r\n    isEmpty() {\r\n        if (this.keyArray().length == 0)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n    ;\r\n    size() {\r\n        return this.keyArray().length;\r\n    }\r\n    keyArray() {\r\n        var keys = new Array();\r\n        for (var p in this.container) {\r\n            keys.push(p);\r\n        }\r\n        return keys;\r\n    }\r\n    valueArray() {\r\n        var values = new Array();\r\n        var keys = this.keyArray();\r\n        for (var i = 0; i < keys.length; i++) {\r\n            values.push(this.container[keys[i]]);\r\n        }\r\n        return values;\r\n    }\r\n}\r\n",
  "references": []
}
