{
  "code": "import Map from \"./Map\";\r\nimport Log from \"./Log\";\r\nimport { insertCount } from \"./Count\";\r\nimport { AppConfig } from \"../AppConfig\";\r\nimport { showModal } from \"./Common\";\r\nexport default class BannerManager {\r\n    constructor() {\r\n        this.videoCloseTime = -1;\r\n        this.bannerMap = new Map();\r\n        this.videoMap = new Map();\r\n        this.interstitialMap = new Map();\r\n        this.hasLoadInterstitial = null;\r\n        this.hasLoadAd = null;\r\n        this.loadVideo();\r\n    }\r\n    static getSelf() {\r\n        if (BannerManager.self == null) {\r\n            BannerManager.self = new BannerManager();\r\n        }\r\n        return BannerManager.self;\r\n    }\r\n    loadInterstitialAd(callBack) {\r\n        Log.d(\"预加载插屏广告  =============\");\r\n        let thiz = this;\r\n        if (this.hasLoadInterstitial) {\r\n            if (callBack) {\r\n                callBack(this.hasLoadInterstitial);\r\n            }\r\n            return;\r\n        }\r\n        var entity = this.getInsterstitial(0);\r\n        if (entity != null) {\r\n            this.hasLoadInterstitial = entity;\r\n            entity.onLoad(() => {\r\n                Log.d('插屏 广告加载成功');\r\n                insertCount({ userId: AppConfig.userId, type: \"插屏广告加载成功\" });\r\n            });\r\n            entity.onError(err => {\r\n                Log.d('插屏广告加载出错：');\r\n                Log.d(err);\r\n                insertCount({ userId: AppConfig.userId, type: \"插屏广告加载出错\", mark: err });\r\n            });\r\n        }\r\n        if (callBack) {\r\n            callBack(entity);\r\n        }\r\n    }\r\n    getInsterstitial(adIndex) {\r\n        if (typeof wx.createInterstitialAd != 'function')\r\n            return null;\r\n        if (!AppConfig.ifInsterAd)\r\n            return null;\r\n        let entity = this.interstitialMap.get(AppConfig.interstitialAd[adIndex]);\r\n        if (!entity) {\r\n            entity = wx.createInterstitialAd({\r\n                adUnitId: AppConfig.interstitialAd[adIndex]\r\n            });\r\n            entity.onError(e => {\r\n                Log.d(e);\r\n            });\r\n            this.interstitialMap.put(AppConfig.interstitialAd[adIndex], entity);\r\n        }\r\n        else {\r\n            entity.onError(e => {\r\n                Log.d(e);\r\n            });\r\n        }\r\n        return entity;\r\n    }\r\n    showInterstitialAd(callBack, closeCallBack, errorCallBack) {\r\n        var thiz = this;\r\n        if (this.hasLoadInterstitial) {\r\n            this.hasLoadInterstitial.onClose(() => {\r\n                Log.d('插屏广告close回调');\r\n                thiz.hasLoadInterstitial.offClose();\r\n                thiz.hasLoadInterstitial = null;\r\n                thiz.loadInterstitialAd();\r\n                insertCount({ userId: AppConfig.userId, type: \"关闭插屏广告\" });\r\n                if (closeCallBack) {\r\n                    closeCallBack();\r\n                }\r\n            });\r\n            this.hasLoadInterstitial.show().then(() => {\r\n                if (callBack) {\r\n                    callBack();\r\n                }\r\n            }).catch((err) => {\r\n                Log.d(\"展示插屏出错：\");\r\n                Log.d(err);\r\n                insertCount({ userId: AppConfig.userId, type: \"插屏广告加展示出错\", mark: err });\r\n                if (errorCallBack) {\r\n                    errorCallBack();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            thiz.loadInterstitialAd(function (entity) {\r\n                if (entity) {\r\n                    entity.onClose(() => {\r\n                        Log.d('插屏广告close回调');\r\n                        entity.offClose();\r\n                        entity = null;\r\n                        thiz.loadInterstitialAd();\r\n                        if (closeCallBack) {\r\n                            closeCallBack();\r\n                        }\r\n                        insertCount({ userId: AppConfig.userId, type: \"关闭插屏广告\" });\r\n                    });\r\n                    entity.show().then(() => {\r\n                        if (callBack) {\r\n                            callBack();\r\n                        }\r\n                    }).catch((err) => {\r\n                        Log.d(\"展示插屏出错：\");\r\n                        Log.d(err);\r\n                        insertCount({ userId: AppConfig.userId, type: \"插屏广告加展示出错\", mark: err });\r\n                        if (errorCallBack) {\r\n                            errorCallBack();\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    if (errorCallBack) {\r\n                        errorCallBack();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    initBanner(bannerIndex, callBack) {\r\n        var entity = this.bannerMap.get(AppConfig.banners[bannerIndex]);\r\n        if (!entity) {\r\n            entity = wx.createBannerAd({\r\n                adUnitId: AppConfig.banners[bannerIndex],\r\n                style: {\r\n                    left: 0,\r\n                    top: AppConfig.systemInfo.height - 100,\r\n                    width: AppConfig.systemInfo.screenWidth,\r\n                }\r\n            });\r\n            entity.onError(function (e) {\r\n                if (e) {\r\n                    insertCount({ userId: AppConfig.userId, type: \"banner加载错误\", mark: 'errCode:' + e.errCode + ',errMsg:' + e.errMsg });\r\n                    if (e.errCode == 1004 || e.errCode == 0 || e.errCode == -1000) {\r\n                        AppConfig.bannerError = true;\r\n                    }\r\n                    if (callBack) {\r\n                        callBack(bannerIndex, e);\r\n                    }\r\n                }\r\n            });\r\n            this.bannerMap.put(AppConfig.banners[bannerIndex], entity);\r\n        }\r\n    }\r\n    getBanner(bannerIndex) {\r\n        var entity = this.bannerMap.get(AppConfig.banners[bannerIndex]);\r\n        if (!entity) {\r\n            entity = wx.createBannerAd({\r\n                adUnitId: AppConfig.banners[bannerIndex],\r\n                style: {\r\n                    left: 0,\r\n                    top: AppConfig.systemInfo.height - 100,\r\n                    width: AppConfig.systemInfo.screenWidth,\r\n                }\r\n            });\r\n            this.bannerMap.put(AppConfig.banners[bannerIndex], entity);\r\n        }\r\n        return entity;\r\n    }\r\n    showBanner(bannerIndex, height, callBack) {\r\n        var thiz = this;\r\n        var adKey = AppConfig.banners[bannerIndex];\r\n        var entity = this.bannerMap.get(adKey);\r\n        if (entity) {\r\n            this.bannerMap.remove(adKey);\r\n            entity.hide();\r\n            entity.destroy();\r\n            entity = null;\r\n        }\r\n        entity = wx.createBannerAd({\r\n            adUnitId: adKey,\r\n            style: {\r\n                left: 0,\r\n                top: 0,\r\n                width: 300,\r\n            }\r\n        });\r\n        entity.onError(e => {\r\n            Log.d(e);\r\n            if (e) {\r\n                insertCount({ userId: AppConfig.userId, type: \"banner加载错误\", mark: 'errCode:' + e.errCode + ',errMsg:' + e.errMsg });\r\n                if (e.errCode == 1004 || e.errCode == 0 || e.errCode == -1000) {\r\n                    AppConfig.bannerError = true;\r\n                }\r\n            }\r\n            if (callBack) {\r\n                callBack(-2);\r\n            }\r\n        });\r\n        if (!entity) {\r\n            if (callBack) {\r\n                callBack(-2);\r\n            }\r\n            return;\r\n        }\r\n        this.bannerMap.put(adKey, entity);\r\n        entity.onResize(size => {\r\n            if (height) {\r\n                if ((height - AppConfig.IPHONEX_BOTTOM) * AppConfig.scaleX < size.height) {\r\n                    insertCount({ userId: AppConfig.userId, type: \"banner高度不够\" });\r\n                    if (callBack) {\r\n                        callBack(-1);\r\n                    }\r\n                    return;\r\n                }\r\n                entity.style.top = AppConfig.systemInfo.screenHeight - size.height - AppConfig.IPHONEX_BOTTOM;\r\n                entity.style.left = (AppConfig.systemInfo.screenWidth - size.width) / 2;\r\n                entity.show();\r\n                if (callBack) {\r\n                    callBack(0);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    showBannerInPosition(bannerIndex, x, y, width, callBack, height) {\r\n        Log.d(\"banner ==> 加广告\");\r\n        var thiz = this;\r\n        var adKey = AppConfig.banners[bannerIndex];\r\n        var entity = this.bannerMap.get(adKey);\r\n        ;\r\n        if (entity) {\r\n            this.bannerMap.remove(adKey);\r\n            entity.hide();\r\n            entity.destroy();\r\n            entity = null;\r\n        }\r\n        entity = wx.createBannerAd({\r\n            adUnitId: adKey,\r\n            style: {\r\n                left: x * AppConfig.scaleX,\r\n                top: y * AppConfig.scaleX,\r\n                width: width ? width * AppConfig.scaleX : AppConfig.systemInfo.screenWidth,\r\n                height: height ? height * AppConfig.scaleX : 300\r\n            }\r\n        });\r\n        entity.onError(e => {\r\n            Log.d(e);\r\n            if (e && e.errCode) {\r\n                insertCount({ userId: AppConfig.userId, type: \"banner加载错误\", mark: 'errCode:' + e.errCode });\r\n                if (e.errCode == 1004 || e.errCode == 0 || e.errCode == -10000) {\r\n                    AppConfig.bannerError = true;\r\n                }\r\n            }\r\n            if (callBack) {\r\n                callBack(-2);\r\n            }\r\n        });\r\n        if (!entity) {\r\n            if (callBack) {\r\n                callBack(-2);\r\n            }\r\n            return;\r\n        }\r\n        this.bannerMap.put(adKey, entity);\r\n        entity.onResize(size => {\r\n            if (height != void 0) {\r\n                if (size.height > height * AppConfig.scaleX) {\r\n                    insertCount({ userId: AppConfig.userId, type: \"banner高度不够\" });\r\n                    if (callBack) {\r\n                        callBack(-1);\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            entity.style.left = (AppConfig.systemInfo.screenWidth - size.width) / 2;\r\n            Log.d(\"广告加载成功：\");\r\n            Log.d(entity.style);\r\n            entity.show();\r\n            if (callBack) {\r\n                callBack(0);\r\n            }\r\n        });\r\n    }\r\n    hideBanner(bannerIndex) {\r\n        Log.d(\"banner ==> 隐藏广告\");\r\n        if (bannerIndex >= 0) {\r\n            var entity = this.bannerMap.get(AppConfig.banners[bannerIndex]);\r\n            if (entity) {\r\n                this.bannerMap.remove(AppConfig.banners[bannerIndex]);\r\n                entity.hide();\r\n                entity.destroy();\r\n                entity = null;\r\n            }\r\n        }\r\n        else {\r\n            var keyList = this.bannerMap.keyArray();\r\n            var keyLen = keyList.length;\r\n            for (var i = 0; i < keyLen; i++) {\r\n                var entity = this.bannerMap.get(keyList[i]);\r\n                if (entity) {\r\n                    entity.hide();\r\n                    entity.destroy();\r\n                    entity = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getVideoAd(videoIndex) {\r\n        var entity = this.videoMap.get(AppConfig.videos[videoIndex]);\r\n        if (!entity) {\r\n            entity = wx.createRewardedVideoAd({\r\n                adUnitId: AppConfig.videos[videoIndex]\r\n            });\r\n            entity.onError(e => {\r\n                Log.d(e);\r\n            });\r\n            this.videoMap.put(AppConfig.videos[videoIndex], entity);\r\n        }\r\n        else {\r\n            entity.onError(e => {\r\n                Log.d(e);\r\n            });\r\n        }\r\n        return entity;\r\n    }\r\n    loadVideo(callBack) {\r\n        Log.d(\"loadVideo  =============\");\r\n        let thiz = this;\r\n        if (thiz.hasLoadAd) {\r\n            if (callBack) {\r\n                callBack(thiz.hasLoadAd);\r\n            }\r\n            return;\r\n        }\r\n        var entity = thiz.getVideoAd(0);\r\n        if (entity != null) {\r\n            entity.load()\r\n                .then(() => {\r\n                Log.d(\"loadVideo  ============= success!!!\");\r\n                AppConfig.canShowVideo = true;\r\n                thiz.hasLoadAd = entity;\r\n                if (callBack) {\r\n                    callBack(entity);\r\n                }\r\n            })\r\n                .catch(err => {\r\n                Log.d(\"loadVideo  err=>\");\r\n                Log.d(err);\r\n                thiz.hasLoadAd = null;\r\n                AppConfig.canShowVideo = false;\r\n                if (callBack) {\r\n                    callBack(null);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    showVideo(callBack, errorMsg, incomplete, errorCallBack) {\r\n        var thiz = this;\r\n        if (thiz.hasLoadAd) {\r\n            thiz.hasLoadAd.onClose((status) => {\r\n                Log.d('提示视频广告close回调');\r\n                thiz.hasLoadAd.offClose();\r\n                thiz.hasLoadAd = null;\r\n                thiz.loadVideo();\r\n                var dTime = (new Date().getTime() - thiz.videoCloseTime) / 1000;\r\n                var isRealClose = dTime > 15000 ? true : false;\r\n                thiz.videoCloseTime = new Date().getTime();\r\n                Log.d('视频关闭时间：' + thiz.videoCloseTime);\r\n                Log.d('时差：' + dTime + '秒');\r\n                if ((status && status.isEnded) || status === undefined && isRealClose) {\r\n                    insertCount({ userId: AppConfig.userId, type: '统计 视频看完', mark: 'userId:' + AppConfig.userId + ';video:' + AppConfig.videos[0] + 'dTime:' + dTime + '秒' });\r\n                    callBack();\r\n                }\r\n                else {\r\n                    insertCount({ userId: AppConfig.userId, type: '统计 视频未看完', mark: 'video:' + AppConfig.videos[0] });\r\n                    showModal({\r\n                        title: '提示',\r\n                        content: incomplete ? incomplete : '视频未完整播放，无法获得提示！',\r\n                        confirmText: '好的',\r\n                        showCancel: false,\r\n                    });\r\n                }\r\n            });\r\n            this.hasLoadAd.show();\r\n        }\r\n        else {\r\n            if (AppConfig.DEBUG) {\r\n                showModal({\r\n                    title: '提示',\r\n                    content: '视频预加载失败~~~',\r\n                    confirmText: '好的',\r\n                    showCancel: false,\r\n                });\r\n            }\r\n            thiz.loadVideo(function (entity) {\r\n                if (entity) {\r\n                    entity.onClose((status) => {\r\n                        Log.d('提示视频广告close回调');\r\n                        thiz.hasLoadAd.offClose();\r\n                        thiz.hasLoadAd = null;\r\n                        thiz.loadVideo();\r\n                        var dTime = (new Date().getTime() - thiz.videoCloseTime) / 1000;\r\n                        var isRealClose = dTime > 9000 ? true : false;\r\n                        thiz.videoCloseTime = new Date().getTime();\r\n                        Log.d('视频关闭时间：' + thiz.videoCloseTime);\r\n                        Log.d('时差：' + dTime + '秒');\r\n                        if ((status && status.isEnded) || status === undefined && isRealClose) {\r\n                            insertCount({ userId: AppConfig.userId, type: '统计 视频看完', mark: 'userId:' + AppConfig.userId + ';video:' + AppConfig.videos[0] + 'dTime:' + dTime + '秒' });\r\n                            callBack();\r\n                        }\r\n                        else {\r\n                            insertCount({ userId: AppConfig.userId, type: '统计 视频未看完', mark: 'video:' + AppConfig.videos[0] });\r\n                            showModal({\r\n                                title: '提示',\r\n                                content: incomplete ? incomplete : '视频未完整播放，无法获得提示！',\r\n                                confirmText: '好的',\r\n                                showCancel: false,\r\n                            });\r\n                        }\r\n                    });\r\n                    entity.show();\r\n                }\r\n                else {\r\n                    if (errorCallBack) {\r\n                        errorCallBack();\r\n                    }\r\n                    else {\r\n                        showModal({\r\n                            title: '提示',\r\n                            content: errorMsg ? errorMsg : '非常抱歉，暂时没有可观看的视频，建议先使用金币看提示吧！',\r\n                            confirmText: '好的',\r\n                            showCancel: false,\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nBannerManager.GAMEPAGE_BANNER = 0;\r\nBannerManager.GAMEPAGE_TIPAD = 0;\r\nBannerManager.GAMEPAGE_BONUSAD = 0;\r\nBannerManager.LOGIN_BONUSAD = 0;\r\nBannerManager.HIDE_ALL = -1;\r\nBannerManager.self = null;\r\n",
  "references": [
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/utils/Map.ts",
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/utils/Log.ts",
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/utils/Count.ts",
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/AppConfig.ts",
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/utils/Common.ts"
  ]
}
