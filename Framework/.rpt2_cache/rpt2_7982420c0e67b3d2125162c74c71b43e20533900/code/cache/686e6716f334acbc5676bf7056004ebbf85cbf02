{
  "code": "import { ui } from \"../ui/layaMaxUI\";\r\nimport { AppConfig } from \"../AppConfig\";\r\nimport Log from \"../utils/Log\";\r\nimport UiManager from \"../UiManager\";\r\nimport LevelData from \"../utils/Question\";\r\nimport LevelItem from \"../item/LevelItem\";\r\nexport default class LevelPage extends ui.page.LevelPageUI {\r\n    constructor() {\r\n        super();\r\n        this.levelArr = [];\r\n        this.height = AppConfig.screenH;\r\n        this.topLayout.y = AppConfig.topFixOffset;\r\n        this.contentLayout.y = this.topLayout.y + this.topLayout.height;\r\n        this.contentLayout.height = this.height - this.contentLayout.y;\r\n        this.topBg.y = -this.topLayout.y;\r\n        this.topBg.height = this.topLayout.height + this.topLayout.y;\r\n        this.btnHome.on(Laya.Event.CLICK, this, this.backClick);\r\n        this.dataList.height = this.contentLayout.height - this.dataList.y - 400;\r\n        this.dataList.vScrollBarSkin = \"\";\r\n        this.dataList.itemRender = LevelItem;\r\n        this.dataList.renderHandler = new Laya.Handler(this, this.updateItem);\r\n        this.dataList.array = this.levelArr;\r\n    }\r\n    backClick(e) {\r\n        e.stopPropagation();\r\n        UiManager.getSelf().goHome();\r\n    }\r\n    onEnable() {\r\n        Log.d(\"BasePage   onEnable\");\r\n    }\r\n    onDisable() {\r\n        Log.d(\"BasePage onDisable\");\r\n    }\r\n    static getSelf() {\r\n        if (LevelPage.self == null) {\r\n            LevelPage.self = new LevelPage();\r\n        }\r\n        return LevelPage.self;\r\n    }\r\n    init(maxLevel, userLevel) {\r\n        this.levelArr.splice(0, this.levelArr.length);\r\n        let userGrade = Math.ceil((userLevel % AppConfig.GRADE_COUNT == 0 ? (userLevel + 1) : userLevel) / AppConfig.GRADE_COUNT);\r\n        var lastGrade = 1;\r\n        for (var i = 1; i <= AppConfig.totalGrade; i++) {\r\n            var gradeKey = AppConfig.gradePre + i;\r\n            var data = new LevelData();\r\n            data.grade = i;\r\n            data.level = 0;\r\n            data.totalLevel = AppConfig.GRADE_COUNT;\r\n            data.isUnLock = i === 1;\r\n            if (i <= userGrade) {\r\n                data.level = i == userGrade ? userLevel % AppConfig.GRADE_COUNT : AppConfig.GRADE_COUNT;\r\n                data.isUnLock = true;\r\n            }\r\n            this.levelArr.push(data);\r\n            if (i == AppConfig.totalGrade) {\r\n                data.totalLevel = maxLevel - (i - 1) * AppConfig.GRADE_COUNT;\r\n            }\r\n            if (!AppConfig.DEBUG && i >= lastGrade + 5) {\r\n                break;\r\n            }\r\n        }\r\n        this.dataList.array = this.levelArr;\r\n    }\r\n    updateItem(cell, index) {\r\n        cell.setData(cell.dataSource, index + 1);\r\n    }\r\n}\r\nLevelPage.self = null;\r\n",
  "references": [
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/ui/layaMaxUI.ts",
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/AppConfig.ts",
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/utils/Log.ts",
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/UiManager.ts",
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/utils/Question.ts",
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/item/LevelItem.ts"
  ]
}
