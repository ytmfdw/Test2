{
  "code": "import { ui } from \"../ui/layaMaxUI\";\r\nimport ProgressView from \"../widget/ProgressView\";\r\nimport { AppConfig } from \"../AppConfig\";\r\nimport Log from \"../utils/Log\";\r\nexport default class LoadPage extends ui.page.LoadPageUI {\r\n    constructor() {\r\n        super();\r\n        this.progressBar = null;\r\n        this.subpackage = [\r\n            'res', 'comp', 'level', 'sound'\r\n        ];\r\n        this.stateFlag = [];\r\n        this.subLen = 0;\r\n        this.loadIndex = 0;\r\n        this.min = 0;\r\n        this.max = 100;\r\n        this.progress = 0;\r\n        this.callBack = null;\r\n        this.totalProgress = [0, 0, 0];\r\n        this.progressBar = new ProgressView();\r\n        this.progressBarLayout.addChild(this.progressBar);\r\n        this.subLen = this.subpackage.length;\r\n    }\r\n    setCallBack(callBack) {\r\n        this.callBack = callBack;\r\n    }\r\n    static getSelf(callBack) {\r\n        if (LoadPage.self == null) {\r\n            LoadPage.self = new LoadPage();\r\n        }\r\n        if (callBack) {\r\n            LoadPage.self.setCallBack(callBack);\r\n            LoadPage.self.loadRes(callBack);\r\n        }\r\n        return LoadPage.self;\r\n    }\r\n    loadRes(callBack) {\r\n        this.callBack = callBack;\r\n        this.setProgress(0);\r\n        let thiz = this;\r\n        thiz.loadIndex = 0;\r\n        let isSuccess = true;\r\n        if (!AppConfig.isWX || this.subLen == 0) {\r\n            thiz.onCompelete(isSuccess);\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.subLen; i++) {\r\n            if (thiz.stateFlag[i]) {\r\n                thiz.loadIndex++;\r\n                if (thiz.loadIndex == thiz.subLen) {\r\n                    thiz.onCompelete(isSuccess);\r\n                }\r\n                continue;\r\n            }\r\n            let loadTask = wx.loadSubpackage({\r\n                name: this.subpackage[i],\r\n                success: (res) => {\r\n                    Log.d(res);\r\n                    thiz.stateFlag[i] = true;\r\n                },\r\n                fail: (res) => {\r\n                    isSuccess = false;\r\n                    thiz.stateFlag[i] = false;\r\n                },\r\n                complete() {\r\n                    thiz.loadIndex++;\r\n                    if (thiz.loadIndex == thiz.subLen) {\r\n                        thiz.onCompelete(isSuccess);\r\n                    }\r\n                }\r\n            });\r\n            loadTask.onProgressUpdate(res => {\r\n                Log.d('下载进度  i=>' + i, res.progress);\r\n                Log.d('已经下载的数据长度', res.totalBytesWritten);\r\n                Log.d('预期需要下载的数据总长度', res.totalBytesExpectedToWrite);\r\n                thiz.totalProgress[i] = res.totalBytesWritten / res.totalBytesExpectedToWrite * 100;\r\n                let per = (thiz.totalProgress[0] + thiz.totalProgress[1] + thiz.totalProgress[2]) / 300;\r\n                thiz.setProgress(per * 100);\r\n            });\r\n        }\r\n    }\r\n    setProgress(progress, min, max) {\r\n        if (!isNaN(min)) {\r\n            this.min = min;\r\n        }\r\n        if (!isNaN(max)) {\r\n            this.max = max;\r\n        }\r\n        this.progress = progress;\r\n        this.progressBar.setProgress(this.progress);\r\n        this.loadText.text = '正在玩命加载...' + Math.round(progress) + '%';\r\n    }\r\n    onCompelete(flag) {\r\n        if (this.callBack) {\r\n            this.callBack(flag);\r\n        }\r\n    }\r\n    onDisable() {\r\n        Log.d(\"移出舞台\");\r\n        LoadPage.self = null;\r\n        this.destroy();\r\n    }\r\n}\r\nLoadPage.self = null;\r\n",
  "references": [
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/ui/layaMaxUI.ts",
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/widget/ProgressView.ts",
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/AppConfig.ts",
    "E:/game/Growup/Laya2Framework/Framework/Framework/src/utils/Log.ts"
  ]
}
